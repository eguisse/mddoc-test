---
name: build-pdf

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

env:
  REGISTRY: "ghcr.io"
  IMAGE_NAME: "eguisse/mddoc:2.2.2"

jobs:
  build-pdf:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare for docker build
        id: prep
        run: |
          VERSION=noop
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi

          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: prep build dir
        run: |
          mkdir -p build && chmod 777 build

      - name: pull docker image mddoc
        run: docker pull "${{ env.IMAGE_NAME }}"

      - name: run docker image
        run: docker run --rm -v "${{ github.workspace }}:/mnt:rw" "${{ env.IMAGE_NAME }}" bash makepdf.sh -d docs -b build -o build/mddoc-test.pdf -f mddoc.yml

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: site

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/mddoc-test.pdf
          asset_name: mddoc-test-${{ steps.prep.outputs.version }}.pdf
          asset_content_type: application/pdf
